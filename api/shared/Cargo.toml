[package]
name = "confidential_assets-api-shared"
version = "0.1.0"
edition = "2021"

[features]
default = [ "std", "simd_backend", "discrete_log" ]

backend = [ "std", "sqlx", "confidential_assets", "rand", "codec" ]

u64_backend = [ "confidential_assets?/u64_backend" ]
avx2_backend = [ "confidential_assets?/avx2_backend" ]
simd_backend = [ "confidential_assets?/simd_backend" ]

discrete_log = [ "confidential_assets?/rayon", "confidential_assets?/discrete_log" ]

std = [ "confidential_assets?/std", "rand?/std", "codec?/std" ]

[dependencies]
# OpenAPI
utoipa = { workspace = true }

# Confidential Assets
confidential_assets = { workspace = true, default-features = false, optional = true }

rand = { workspace = true, default-features = false, features = ["alloc"], optional = true }
zeroize = { workspace = true }

# encoding
hex = { workspace = true, default-features = false, features = ["alloc"] }
codec = { workspace = true, default-features = false, features = ["derive"], optional = true }
serde = { workspace = true }
serde_json = { workspace = true, default-features = false, features = ["alloc"] }
serde-hex = { workspace = true }

# Sqlx, only when the backend add this as dependency is compiled
sqlx = { workspace = true, optional = true }

# types
uuid = { workspace = true }
chrono = { workspace = true }
rust_decimal = { workspace = true, features = ["serde-with-arbitrary-precision"] }
rust_decimal_macros = { workspace = true }
